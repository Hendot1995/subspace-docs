"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[9405],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},i=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(f,l(l({ref:t},i),{},{components:n})):o.createElement(f,l({ref:t},i))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:r,l[1]=p;for(var c=2;c<a;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3533:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={title:"Local development",sidebar_position:9,description:"Guide on local development Subspace Node and Farmer",keywords:["local development","subspace network"]},l=void 0,p={unversionedId:"develop/nova/local_development",id:"develop/nova/local_development",title:"Local development",description:"Guide on local development Subspace Node and Farmer",source:"@site/i18n/bn/docusaurus-plugin-content-docs/current/develop/nova/local_development.md",sourceDirName:"develop/nova",slug:"/develop/nova/local_development",permalink:"/bn/docs/pre-release/develop/nova/local_development",draft:!1,editUrl:"https://github.com/subspace/subspace-docs/edit/main/i18n/bn/docusaurus-plugin-content-docs/current/develop/nova/local_development.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Local development",sidebar_position:9,description:"Guide on local development Subspace Node and Farmer",keywords:["local development","subspace network"]},sidebar:"tutorialSidebar",previous:{title:"Hardhat",permalink:"/bn/docs/pre-release/develop/nova/hardhat_guide"},next:{title:"Subspace block explorer",permalink:"/bn/docs/pre-release/develop/nova/block_explorer"}},s={},c=[{value:"Setting up a local development environment",id:"setting-up-a-local-development-environment",level:3}],i={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"setting-up-a-local-development-environment"},"Setting up a local development environment"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"You can always set up a local network to test and deploy your smart contract!")),(0,r.kt)("p",null,"To establish a full local network, you need to run a local node, a Core-EVM domain, and a farmer."),(0,r.kt)("p",null,"First, visit the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/subspace/subspace/releases"},"Subspace releases"))," page and download the most up-to-date stable versions of the node and farmer."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For each release, there are two versions:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"skylake: for newer processors from around 2015 and onwards"),(0,r.kt)("li",{parentName:"ol"},"x86-64-v2: for older processors from around 2009 and some older VMs")),(0,r.kt)("p",{parentName:"admonition"},"Older processors/VMs are no longer supported by official releases, but they can still be ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/subspace/subspace/blob/main/docs/development.md"},"compiled manually")," if desired.")),(0,r.kt)("p",null,"After downloading both files that suit your system, start a node using your preferred terminal. If you want to start an EVM domain on your local machine, you need to specify:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Your local RPC server port"),(0,r.kt)("li",{parentName:"ul"},"Your local web-socket RPC port\nYou can do this with the following command:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./your_subspace_node_path run --dev --rpc-listen-on 9444 -- --domain-id 3 --dev --rpc-listen-on 8545\n")),(0,r.kt)("p",null,"This will create a local RPC on port ",(0,r.kt)("strong",{parentName:"p"},"8545"),"."),(0,r.kt)("p",null,"Secondly, you need to start a farmer by running the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"}," ./your_subspace_farmer_path farm --reward-address [YOUR REWARD ADDRESS] path=tmp-farm,size=100M\n")),(0,r.kt)("p",null,"You can specify the desired plot size, but 100M should be sufficient."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"And that\u2019s it!")," By starting your ",(0,r.kt)("strong",{parentName:"p"},"local node")," and a ",(0,r.kt)("strong",{parentName:"p"},"farmer"),", you have your ",(0,r.kt)("strong",{parentName:"p"},"local RPC")," ready for testing and deploying your smart contracts! You can easily connect your ",(0,r.kt)("a",{parentName:"p",href:"https://metamask.io/"},"MetaMask")," account to the local development network, as well as use ",(0,r.kt)("a",{parentName:"p",href:"https://remix.ethereum.org/"},"Remix")," or ",(0,r.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/"},"Foundry")," in order to test and deploy smart contracts on a local network!"))}u.isMDXComponent=!0}}]);