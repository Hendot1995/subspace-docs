"use strict";(self.webpackChunksubspace_docs=self.webpackChunksubspace_docs||[]).push([[672],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),s=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(m.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),u=a,f=c["".concat(m,".").concat(u)]||c[u]||d[u]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3189:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return m},default:function(){return u},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Command Index",sidebar_position:2,description:"An Command Index for Farming CLI",keywords:["Getting Started","Learn","Farming","Command","Commands"]},m=void 0,s={unversionedId:"farm/commands",id:"version-snapshot-2022-mar-09/farm/commands",title:"Command Index",description:"An Command Index for Farming CLI",source:"@site/protocol_versioned_docs/version-snapshot-2022-mar-09/farm/commands.md",sourceDirName:"farm",slug:"/farm/commands",permalink:"/protocol/snapshot-2022-mar-09/farm/commands",draft:!1,editUrl:"https://github.com/subspace/subspace-docs/blob/main/protocol_versioned_docs/version-snapshot-2022-mar-09/farm/commands.md",tags:[],version:"snapshot-2022-mar-09",sidebarPosition:2,frontMatter:{title:"Command Index",sidebar_position:2,description:"An Command Index for Farming CLI",keywords:["Getting Started","Learn","Farming","Command","Commands"]},sidebar:"masterSidebar",previous:{title:"Farming with the CLI",permalink:"/protocol/snapshot-2022-mar-09/farm/farming"},next:{title:"Core Protocol Development",permalink:"/protocol/snapshot-2022-mar-09/development"}},p={},d=[{value:"Node",id:"node",level:3},{value:"Farmer",id:"farmer",level:3}],c={toc:d};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This may be outdated as commands are adjusted and modified constantly. For more accurate command list always refer to the ",(0,i.kt)("inlineCode",{parentName:"p"},"--help")," flag of the Farmer or Node"))),(0,i.kt)("h3",{id:"node"},"Node"),(0,i.kt)("p",null,"Our node is a Substrate node, and has the same flags as Substrate. Refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.substrate.io/v3/getting-started/overview/"},"Official Substrate")," documentation for further reference. "),(0,i.kt)("h3",{id:"farmer"},"Farmer"),(0,i.kt)("p",null,"Structure -> ",(0,i.kt)("inlineCode",{parentName:"p"},"./FARMER_FILE_NAME <COMMAND> <SUBCOMMAND>")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"erase-plot"),": Erase existing plot (doesn't touch identity)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--custom-path <CUSTOM_PATH>"),": Use custom path for data storage instead of platform-specific default."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"farm"),": Start a farmer using previously created plot",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--bootstrap-node <BOOTSTRAP_NODE>"),": Multiaddrs of bootstrap node to connect to on startup, multiple are supported"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--custom-path <CUSTOM_PATH>"),": Custom path for data storage instead of platform-specific default"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--listen-on <LISTEN_ON>"),": Multiaddrs to listen on for subspace network, for instance '/ip4/0.0.0.0/tcp/0', multiple are supported, subspace networking is disabled when non is specified."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--node-rpc-url <NODE_RPC_URL>"),": WebSocket RPC URL of the Subspace node to connect to (default: ws://127.0.0.1:9944)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--reward-address <REWARD_ADDRESS>"),": Address for farming rewards"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-w"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--ws-server-listen-addr <WS_SERVER_LISTEN_ADDR>"),": Host & Port where built-in WebSocket RPC server should listen for incoming connections (default: 127.0.0.1:9955)"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"help"),": Print this message or the help of the given subcommand(s)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"identity"),": Identity management - ",(0,i.kt)("em",{parentName:"li"},"This refers to the farmer identity, ",(0,i.kt)("strong",{parentName:"em"},"not")," the reward address."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"import-from-mnemonic <PHRASE>"),": Import identity from BIP39 mnemonic phrase"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"view"),": View identity information",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-a"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--address"),": Print SS58 address (default if no other option is specified)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--mnemonic"),": Print Mnemonic (NOTE: never share this with ANYONE!)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-p"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--public-key"),": Print public key (hex)"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"wipe"),": Wipes plot and identity",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--custom-path <CUSTOM_PATH>"),": Use custom path for data storage instead of platform-specific default.")))))}u.isMDXComponent=!0}}]);